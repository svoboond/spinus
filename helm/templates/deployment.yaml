apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{ if ( .Files.Get "configmap.yaml") -}}
      annotations: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- end }}
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['sh', '-c', 'until nc -z -w 2 {{ .Values.database.host }} {{ .Values.database.port }} && echo mysql DB ok; do sleep 2; done;']
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["-config", "/app/local-conf.yaml"]
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /app/local-conf.yaml
              subPath: local.yaml
      volumes:
        - name: config
          configMap:
            name: {{ include "chart.fullname" . }}
